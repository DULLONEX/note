import kotlin.Boolean;

-- 账单
CREATE TABLE ChargeUp(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    content TEXT NOT NULL ,
    amount TEXT NOT NULL ,
    files TEXT, -- 会按照,进行分割
    amountTypeId INTEGER  NOT NULL REFERENCES AmountType(id),
    fillTime INTEGER NOT NULL, -- 新增的填写日期
    createTime  INTEGER NOT NULL,
    whetherDelete INTEGER AS Boolean DEFAULT 0 NOT NULL
);
selectAllChargeUp:
SELECT t1.*,t2.message,t2.whetherSystem FROM ChargeUp AS t1
INNER JOIN AmountType AS t2 ON t1.amountTypeId = t2.id
WHERE t1.whetherDelete = 0 ORDER BY  t1.fillTime DESC;

selectChargeUpByid:
SELECT t1.*,t2.message,t2.whetherSystem FROM ChargeUp AS t1
INNER JOIN AmountType AS t2 ON t1.amountTypeId = t2.id
WHERE t1.id = ? AND t1.whetherDelete = 0;

insertChargeUp:
INSERT INTO ChargeUp(content,amount,files,amountTypeId,fillTime,createTime)
VALUES (?,?,?,?,?,?);

updateChargeUp:
UPDATE ChargeUp SET content = ?,amount = ?,files = ?,amountTypeId = ?,fillTime = ? WHERE id = ?;

delChargeUp:
UPDATE ChargeUp SET whetherDelete = 1 WHERE id = ?;

sumAmount:
SELECT ROUND(sum(amount),2) AS totalAmount FROM ChargeUp WHERE  whetherDelete = 0;

monthAverageAmount:
SELECT AVG(monthTotal) AS average_amount FROM (
  SELECT
    CAST(strftime('%Y', fillTime / 1000, 'unixepoch') AS INTEGER) AS year,
    CAST(strftime('%m', fillTime / 1000, 'unixepoch') AS INTEGER) AS month,
    ROUND(SUM(amount), 2) AS monthTotal
  FROM ChargeUp
  WHERE whetherDelete = 0 AND fillTime IS NOT NULL AND amount IS NOT NULL
  GROUP BY
    year,month
);